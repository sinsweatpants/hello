export const Patterns = (() => {
  // مُنشئ مختصر للـ RegExp
  const c = (s: string | RegExp, flags = "") => new RegExp(s as any, flags);

  // ——— ثوابت فرعية لإعادة الاستخدام (متوافقة مع المصنّف) ———
  // اتجاه (داخل/خارج) + مؤشرات زمن
  const INOUT_PART = String.raw`(?:داخلي|خارجي|د\.|خ\.)`;
  const TIME_PART =
    String.raw`(?:ليل|نهار|ل\.|ن\.|صباح|مساء|فجر|ظهر|عصر|مغرب|الغروب|الفجر)`;

  // يدعم: (INOUT[-:،]?TIME | TIME[-:،]?INOUT) مع السماح بمسافات متغيّرة
  const TIME_LOCATION_BOTH =
    String.raw`(?:${INOUT_PART}\s*[-–—:،]?\s*${TIME_PART}|${TIME_PART}\s*[-–—:،]?\s*${INOUT_PART})`;

  // كلمات أمكنة شائعة لبدء scene-header-3 (قابلة للتوسعة)
  const PLACE_LEXICON =
    String.raw`(?:مسجد|بيت|منزل|دار|شقة|فيلا|مكتب|محل|دكان|مقهى|مطعم|فندق|مستشفى|مدرسة|جامعة|كلية|شارع|طريق|ميدان|حديقة|نيل|بحر|صحراء|جبل|قرية|مدينة|سيارة|أتوبيس|قطار|طائرة|باب|نافذة|سلم|سطح|بلكونة|حمام|مطبخ|صالة|غرفة|قاعة|ممر|ساحة|مقبرة|مخبز|مكتبة|كهف|قصر)`;

  // ——— أنماط أساسية ———
  return {
    /** نقط/رموز قبل أسماء الشخصيات */
    characterBullets: c(
      String.raw`^([•○●◦▪▫■□◼◻⚫⚪🔴🔵⭕]+|[-–—*+])\s*`
    ),

    /**
     * أسماء الشخصيات (يسمح ببادئة "صوت "، ومع أو بدون نقطتين)
     * متوافق مع المصنّف: سطر اسم عربي 2–40 حرفًا ومسافات
     */
    characterNames: c(
      String.raw`^\s*(?:صوت\s+)?[\u0600-\u06FF][\u0600-\u06FF\s]{1,40}\s*:?\s*$`
    ),

    /** كلمات مشهد/مكان/زمن عامة (للتحسّس المبكر فقط) */
    sceneKeywords: c(
      String.raw`^(مشهد|لقطة|منظر|مكان|زمن|وقت|SCENE|LOCATION|TIME)\s*`,
      "i"
    ),

    /** معجم أماكن عام (للمساعدة في scene-header-3 أو الـ action) */
    locationWords: c(
      String.raw`^${PLACE_LEXICON}`,
      "i"
    ),

    /** مؤشرات زمن عامة (تُستخدم للدعم فقط) */
    timeIndicators: c(
      String.raw`(ليل|نهار|صباح|ظهر|عصر|مغرب|عشاء|فجر|ضحى|صيف|شتاء|ربيع|خريف|أمس|اليوم|غدا|الآن|لاحقا|بعدها|قبلها|morning|night|day|evening)`,
      "i"
    ),

    /** أفعال حركة شائعة لبداية سطر Action */
    actionKeywords: c(
      String.raw`^(يدخل|يخرج|يقف|يجلس|يمشي|يجري|ينظر|يبتسم|يضحك|يبكي|يصرخ|يهمس|يفكر|يتذكر|ترقد|تبتسم|ترفع|تربت|تقوم|يشق|تشق|تضرب|يسحب|يلتفت)`,
      "i"
    ),

    /** أي سطر محاط بأقواس (سيُحسم لاحقًا كترجمة/إرشاد قصير) */
    directorNotes: c(String.raw`^\s*\(.*?\)\s*$`),

    /** انتقالات (عربية/إنجليزية) */
    transitions: c(
      String.raw`^(?:قطع|قطع\s+إلى|انتقال\s+إلى|مزج|ذوبان|تلاشي|تلاشي\s+أسود|خارج\s+المشهد|CUT TO:|FADE IN:|FADE OUT:|DISSOLVE TO:?)\s*$`,
      "i"
    ),

    /**
     * سطر مشهد مُرقّم: يلتقط (الكلمة) (الرقم) (الباقي)
     * مثال: "مشهد 12 - ليل-داخلي – قصر ..." → الرقم=12 والباقي للتفكيك
     */
    numberedScene: c(
      String.raw`^(مشهد|لقطة)\s*(\d+)\s*[:：\-–—]?\s*(.*)`,
      "i"
    ),

    /**
     * البسملة — شرط صارم كما في المصنّف
     */
    basmala: c(String.raw`^\s*بسم\s+الله\s+الرحمن\s+الرحيم\s*$`),

    /**
     * sceneHeader1 — سطر يحوي فقط "مشهد + رقم"
     * (يفيد للتعرّف على رأس مشهد مفصول سطرًا لوحده)
     */
    sceneHeader1: c(String.raw`^\s*مشهد\s*\d+\s*$/`, "i"),

    /**
     * sceneHeaderPrefix — مطابق للمصنّف:
     *   ^\s*(?:مشهد|م\.)\s*(\d+)\s*(?:[-–—:،]\s*)?(.*)$
     * يلتقط الرقم والباقي (لتفكيك timeLocation + place)
     */
    sceneHeaderPrefix: c(
      String.raw`^\s*(?:مشهد|م\.)\s*([0-9]+)\s*(?:[-–—:،]\s*)?(.*)$`,
      "i"
    ),

    /**
     * sceneHeader2 (timeLocation) — يدعم الترتيبين ويقبل الفواصل المختلفة
     * لاحقًا تُسوّى الشرطة إلى "-"
     */
    sceneHeader2BothOrders: c(String.raw`${TIME_LOCATION_BOTH}`, "i"),

    /**
     * sceneHeader2: تقسيمات فرعية (قد تُستخدم في التحقق التفصيلي)
     */
    sceneHeader2: {
      time: c(String.raw`${TIME_PART}`, "i"),
      inOut: c(String.raw`${INOUT_PART}`, "i"),
    },

    /**
     * sceneHeader3 — بداية مكان تفصيلي محتملة
     * (غالبًا يُستكمل عبر أسطر لاحقة حتى عنصر جديد)
     */
    sceneHeader3: c(String.raw`^${PLACE_LEXICON}`, "i"),

    // ——— أقواس: ترجمة أم إرشاد قصير؟ ———

    /**
     * شكل الأقواس العام
     */
    parenShaped: c(String.raw`^\s*\(.*?\)\s*$`),

    /**
     * ترجمة داخل أقواس (dialogue) — أي من:
     * 1) احتواء علامات ترقيم جُمَل (؟ . !)
     * 2) طول > 6 كلمات
     * 3) وجود أحرف غير عربية (لاتينية/سريانية)
     *
     * نستخدم Lookaheads على المحتوى داخل الأقواس.
     */
    parenTranslation: c(
      String.raw`^\s*\((?:(?=.*[\.!\؟\?])|(?=(?:[^()]*\s+){6,}[^()]*$)|(?=.*[A-Za-z\u0700-\u074F])).*\)\s*$`
    ),

    /**
     * إرشاد قصير (parenthetical قصير) ≤ 6 كلمات وبدون علامات جُمَل
     * مبدئيًا نعتمد على غياب علامات الجُمَل وعدّ كلمات تقريبي (≤6)
     */
    shortParenthetical: c(
      String.raw`^\s*\((?=.{1,60}\)$)(?!.*[\.!\؟\?])(?:[^()\s]+(?:\s+[^()\s]+){0,5})\)\s*$`
    ),
  };
})();